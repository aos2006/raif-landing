swagger: '2.0'
info:
  title: TP-ADMIN. API
  version: '1.0'
  description: |
    ### Сведения о версии API

    Версия | Дата | Описание
    ------ | ---- | --------
    1.0 | 17.04.2018 | Исходная версия

    ### Конфиденциальность информации
    Сведения, приведённые в настоящем документе, являются конфиденциальной информацией компании.

    ### Общее описание
    Список функций мобильного приложения, которые поддерживаются данным API:
    - Авторизация;
    - Регистрация;
    - Работа с заявками;
    - Получение сообщений;
    - Работа с чатом;
    - Работа с подпиской.

    Для взаимодействия с серверной частью приложение использует протокол на основе REST. Требования к реализации протокола, а также описание форматов сообщений, приведены в соответствующих разделах.

    ### Кодирование данных
    Все данные должны передаваться в кодировке `UTF-8`.


    ### Транспортный протокол
    Все взаимодействие между приложением и сервером должно по возможности осуществляться использованием защищенного соединения HTTPS. Клиент должен самостоятельно проверять валидность SSL-сертификата и немедленно прекращать обмен данными, если эта проверка не прошла.

    ### Доступ к ресурсам системы
    Для доступа к методам API используется протокол на основе RPC. Каждый ресурс идентифицируется уникальным URI.

    Например, `https://host/api/mobile/ver/controller/action` вызывает метод `action` контроллера `controller`.

    Фрагмент `host` определяет основной хост сервера API. Фрагмент `ver` определяет версию протокола обмена данными, и для версии 1.0 имеет вид v10.

    ### Точка входа
    Точка входа для текущей версии API представляет собой следующий URI:

    ```
    https://admin-api.teleperformance.ru/v1/
    ```

    ### Формат возвращаемых данных
    Основным и единственным форматом данных является `application/json`. В этом формате выполняются запросы к методам API и отправляются ответы. В случае наличия тела сообщения, приложение также должно передавать заголовок:

    ```
    Accept: application/json
    ```

    В случае наличия тела сообщения, приложение также должно передавать заголовок:

    ```
    Content-Type: application/json; charset=utf-8
    ```

    Сервер в ответ отправляет:

    ```
    Content-Type: application/json; charset=utf-8
    ```

    Если приложение запросило представление, которое не поддерживается сервером, сервер должен возвратить соответствующий код ошибки HTTP.

    ### Локализация
    Для указания языка, на котором сервер должен возвращать стандартные сообщения и сообщения об ошибках, приложение должно передавать заголовок:

    ```
    Accept-Language: ru
    ```

    Где `ru` – код языка, на котором приложение желает получать сообщения. Если сервер не поддерживает запрошенный язык, сообщения будут приходить на языке по умолчанию.

    ### Содержимое возвращаемых данных
    В случае успешного ответа сервер возвращает код ответа `HTTP: 200 OK` в заголовке, а в теле ответа соответствующий запросу объект. Например:

    ```
    HTTP/1.1 200 OK

    {
      "foo": {
        "bar":"1",
        "baz":"2"
      }
    }
    ```

    В случае ошибки сервер возвращает HTTP код ошибки и соответствующее ему описание. В теле ответа в поле `message` содержится текст произошедшей на сервере ошибки на запрошенном языке. Например:

    ```
    HTTP/1.1 404 Not Found

    {
      "message": "Ошибка при удалении объекта."
    }
    ```

    ### Использование методов HTTP
    Все запросы к серверу должны использовать метод POST. Методы GET, PUT, DELETE и прочие считаются ошибочными и игнорируются.

    #### POST
    Метод HTTP POST используется вызова удаленных процедур, например:

    ```
    POST https://host/api/mobile/ver/controller HTTP 1.1
    Host: host
    ```

    Параметры передаются в теле запроса HTTP следующим образом:

    ```json
    {
      "foo": {
        "bar":"1",
        "baz":"2"
      }
    }

    ```

    Сервер может поддерживать условный метод HTTP. В этом случае приложение может добавить в заголовок запроса HTTP следующее поле:
    ```
    If-Modified-Since: Sat, 23 Jun 2012 12:32:31 GMT
    ```

    ### Авторизация
    При выполнении запроса от клиента выполняется его авторизация. Способ авторизации – по цифровой подписи пакетов данных.

    JSON-пакет подписывается цифровой подписью, при этом к каждому запросу клиент должен добавить следующие HTTP-заголовки:
    - X-Auth-Method – метод вычисления цифровой подписи;
    - X-Auth-Signature – цифровая подпись, закодированная с помощью алгоритма base64;
    - X-Auth-AppId – идентификатор приложения;
    - X-Auth-Time – текущее время на мобильном устройстве, с учетом разницы во времени между сервером и мобильным устройством.

    В случае если цифровая подпись не пройдет проверку на сервере, сервер вернет ошибку HTTP 401:
    `HTTP 401 Unauthorized`.

    В таком случае надо проверить параметры аутентификации либо алгоритм проверки цифровой подписи.

    На данный момент поддерживается единственный метод проверки цифровой подписи – `sha512mob`.

    В этом случае цифровая подпись высчитывается по следующей формуле:
    ```
    sha512(request_body+secret+time)
    ```

    где:
    - sha512 – алгоритм вычисления хеша SHA-2 с длиной дайджеста 512 бит;
    - request_body – json-тело запроса;
    - secret – md5(appSecret);
    - time - время, указанное в заголовке X-Auth-Time.

    Список методов, которым не требуется цифровая подпись:
    - /app/ping (подпись требуется после авторизации);
    - /account/login;
    - /account/create.


    ### Коды ошибок HTTP
    Сервер использует [коды ошибок HTTP](http://en.wikipedia.org/wiki/List_of_HTTP_status_codes) для того, чтобы сигнализировать о нормальном или неудачном выполнении запроса приложения. Перечень используемых кодов HTTP и их значение приведён в таблице:

    Код | Текст
    --- | -----
    **200 OK** | Запрос выполнен успешно.
    **201 Created** | Запрос выполнен успешно, ресурс создан.
    **304 Not Modified** | Содержимое затребованного ресурса не изменилось.
    **400 Bad Request** | Ошибка приложения в запросе. Дополнительная информация может находиться в возвращаемых сервером данных.
    **401 Unauthorized** | Приложение не подписало вызванный метод API либо подпись неверна ИЛИ Авторизация не проведена. Необходимо провести повторную авторизацию.
    **403 Forbidden** | Приложение не имеет доступ к запрошенному ресурсу. Необходимо провести повторную авторизацию.
    **404 Not Found** | Запрашиваемый ресурс отсутствует.
    **405 Method Not Allowed** | Приложение использует неправильный метод HTTP.
    **406 Not Acceptable** | Запрошенная операция не может быть выполнена в силу ограничений данных.
    **410 Gone** | Время, переданное в заголовке `X-Auth-Time` отличается от времени сервера более чем на 60 секунд в меньшую или большую сторону. На устройстве необходимо повторно выполнить метод `/app/ping`.
    **415 Unsupported Media Type** | Сервер не поддерживает запрошенное приложением представление возвращаемых данных.
    **500 Internal Server Error** | Ошибка сервера. Дополнительная информация может находиться в возвращаемых сервером данных.
    **503 Service Unavailable** | В настоящее время сервер не может обслужить запрос, например, находится на обслуживании.

    ### Прочие требования
    Дата и время представляются в формате, определяемым стандартом [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) `(‘yyyy-MM-dd\THH:mm:ss\Z’)`.

    При этом даты передаются либо в UTC, либо обязательно нужно передавать смещение часового пояса пользователя (берется из настроек мобильной ОС). Время должно быть скорректировано с учетом разницы во времени между сервером и мобильным устройством.

    Координаты (долгота и широта) представляются в формате [WGS 84](http://en.wikipedia.org/wiki/World_Geodetic_System), с точностью не менее 6 знаков после десятичной точки.

    При записи чисел с десятичной точкой в качестве разделителя используется только точка.

    Формат номера телефона определяется рекомендацией [E.164](http://en.wikipedia.org/wiki/E.164) и содержит максимум 15 цифр с префиксом в виде символа "+". В номере не допускаются пробелы и прочие разделители.


host: localhost:4010
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:

  /app/ping:
    post:
      tags:
        - app
      summary: Проверка работоспособности сервера
      description: |
        Метод предназначен для проверки работоспособности сервера и должен вызываться перед каждым запросом на сервер.

        Данный метод может быть не подписан в случае если пользователь еще не авторизован.

        Сервер при обработке данного метода не должен проверять поле `X-Auth-Time`.

        В ответ сервер возвращает текущее время. Мобильное приложение должно рассчитать разницу между временем устройства и сервера в секундах, и сохранить. В дальнейшем это значение следует использовать для корректировки текущего времени при отправке заголовка `X-Auth-Time`.
      operationId: App_Ping
      responses:
        200:
          description: Успешное выполнение
          schema:
            $ref: '#/definitions/AppPingResponseModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'

  /account/login:
    post:
      tags:
        - account
      summary: Авторизация пользователя в приложении
      description: |
        Метод предназначен для авторизации пользователя в приложении.

        Передается номер телефона и пароль.

        Перед вызовом этого метода нужно вызвать метод /account/exists. Если пользователя на сервере еще нет, то перейти на регистрацию.

        Полученный `appSecret` никогда не передается обратно на сервер в открытом виде, он участвует только при вычислении цифровой подписи запросов и должен храниться в защищенной памяти мобильного устройства.

        Если авторизация не была успешна, сервер вернет альтернативный статус HTTP с текстом ошибки.

        Ограничения политики безопасности:
        -  Интервал между повторными вызовами метода должен быть не менее 5 секунд.
      operationId: Account_Login
      parameters:
        - in: body
          name: body
          description: Параметры авторизации
          required: true
          schema:
            $ref: "#/definitions/AccountLoginRequestModel"
      responses:
        200:
          description: Успешное выполнение
          schema:
            $ref: '#/definitions/AccountLoginResponseModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'

  /account/exists:
    post:
      tags:
        - account
      summary: Проверка наличия пользователя с заданным email или номером телефона
      description: |
         Проверка наличия пользователя с заданным email или номером телефона
      operationId: Account_Exists
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/AccountExistsRequestModel'
      responses:
        '200':
          description: Успешно
          schema:
            $ref: '#/definitions/AccountExistsResponseModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'

  /account/logout:
    post:
      tags:
        - account
      summary: Выход из аккаунта
      description: |
        Метод предназначен для выхода из аккаунта. На сервере должна удаляться информация из таблицы мобильных приложений.
      operationId: Account_Logout
      responses:
        200:
          description: Успешный выход из аккаунта
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /news/getList:
      post:
        tags:
          - news
        summary: Получение списка новостей
        description: |
        operationId: NewsGetList
        parameters:
          - in: body
            name: body
            schema:
              $ref: '#/definitions/PaginatedRequest'
        responses:
          200:
            description: Список новостей
            schema:
              type: object
              required:
                - news
              properties:
                news:
                  type: array
                  items:
                    $ref: '#/definitions/NewsModelList'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /news/getSingle:
    post:
      tags:
        - news
      summary: Получение конкретной новости
      description: |
      operationId: NewsGetSingle
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              newsId:
                $ref: '#/definitions/NewsId'
      responses:
        200:
          description: Список новостей
          schema:
            $ref: '#/definitions/NewsModelForm'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /news/save:
      post:
        tags:
          - news
        summary: Сохранение новости
        description: |
        operationId: NewsSave
        parameters:
          - in: body
            name: body
            schema:
              $ref: '#/definitions/NewsSaveRequest'
        responses:
          200:
            description: Список новостей
            schema:
              $ref: '#/definitions/NewsModelForm'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /mbr/getList:
    post:
      tags:
        - mbr
      summary: Получение списка mbr
      description: |
      operationId: MbrGetList
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/PaginatedRequest'
      responses:
        200:
          description: Список mbr
          schema:
            type: object
            properties:
              mbr:
                type: array
                items:
                  $ref: '#/definitions/MbrModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /mbr/save:
    post:
      tags:
        - mbr
      summary: Сохранение mbr
      description: |
      operationId: MbrSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/MbrSaveRequest'
      responses:
        200:
          description: Список mbr
          schema:
            type: object
            properties:
              mbr:
                type: array
                items:
                  $ref: '#/definitions/MbrModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  ############# Billing


  /bill/getList:
      post:
        tags:
          - bill
        summary: Получение списка bill
        description: |
        operationId: BillGetList
        parameters:
          - in: body
            name: body
            schema:
              $ref: '#/definitions/BillListRequest'
        responses:
          200:
            description: Список bill
            schema:
              type: object
              properties:
                bill:
                  type: array
                  items:
                    $ref: '#/definitions/BillModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /bill/save:
    post:
      tags:
        - bill
      summary: Сохранение счета
      description: |
      operationId: BillSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/BillSaveRequest'
      responses:
        200:
          description: Список bill
          schema:
            type: object
            properties:
              bill:
                type: array
                items:
                  $ref: '#/definitions/BillModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []


  /file/upload:
    post:
      tags:
        - documents
      summary: Присоединение документов
      description: |

      operationId: File_UploadFile
      parameters:
        - name: entity
          in: body
          schema:
            $ref: '#/definitions/FileUploadRequest'
      responses:
        200:
          description: Успешное выполнение
          schema:
            $ref: '#/definitions/FileModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /misc/getProjects:
      post:
        tags:
          - misc
        summary: Получить список проектов
        description: |

        operationId: MiscGetProjects
        responses:
          200:
            description: Успешное выполнение
            schema:
              type: array
              items:
                $ref: '#/definitions/ProjectModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  ############# WidgetHistogram


  /histogram/getList:
      post:
        tags:
          - widget
        summary: Получение списка histogram
        description: |
        operationId: HistogramGetList
        responses:
          200:
            description: Список histogram
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/WidgetHistogramModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /histogram/save:
    post:
      tags:
        - widget
      summary: Сохранение гистограммы
      description: |
      operationId: HistogramSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/WidgetHistogramSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/WidgetHistogramModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /histogram/getMiscData:
      post:
        tags:
          - widget
        summary: Прочая информация для гистограм
        description: |
        operationId: HistogramGetMiscData
        responses:
          200:
            description: Список histogram
            schema:
              type: object
              properties:
                activities:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Активности
                rows:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Ряды
                parameters:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Параметры
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []


  ############# Abbreviation


  /abbreviation/getList:
      post:
        tags:
          - widget
        summary: Получение списка аббревиатур
        description: |
        operationId: AbbreviationGetList
        responses:
          200:
            description: Список abbreviation
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/AbbreviationModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /abbreviation/save:
    post:
      tags:
        - widget
      summary: Сохранение аббревиатуры
      description: |
      operationId: AbbreviationSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AbbreviationSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/AbbreviationModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []



  ############# RoundedDiagram


  /rounded-diagram/getList:
      post:
        tags:
          - widget
        summary: Получение списка rounded-diagram
        description: |
        operationId: RoundedDiagramGetList
        responses:
          200:
            description: Список rounded-diagram
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/RoundedDiagramModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /rounded-diagram/save:
    post:
      tags:
        - widget
      summary: Сохранение rounded-diagramы
      description: |
      operationId: RoundedDiagramSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RoundedDiagramSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/RoundedDiagramModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /rounded-diagram/getMiscData:
      post:
        tags:
          - widget
        summary: Прочая информация для abbreviation
        description: |
        operationId: abbreviationGetMiscData
        responses:
          200:
            description: |
            schema:
              type: object
              properties:
                kpis:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Варианты KPI
                tablos:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Варианты табло
                indicators:
                  type: array
                  items:
                    allOf:
                    - $ref: '#/definitions/KeyValuedInfo'
                    - description: Индикаторы
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []


  ############# Table


  /table/getList:
      post:
        tags:
          - widget
        summary: Получение списка Table
        description: |
        operationId: TableGetList
        responses:
          200:
            description: Список Table
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/TableModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /table/save:
    post:
      tags:
        - widget
      summary: Сохранение Tableы
      description: |
      operationId: TableSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TableSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/TableModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /table/getMiscData:
      post:
        tags:
          - widget
        summary: Прочая информация для Table
        description: |
        operationId: TableGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/TableMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  ############# Tablo

  /tablo/getList:
      post:
        tags:
          - widget
        summary: Получение списка Tablo
        description: |
        operationId: TabloGetList
        parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              tabloType:
                type: integer
                description: Тип нужного табло
        responses:
          200:
            description: Список Tablo
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/TabloModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /tablo/save:
    post:
      tags:
        - widget
      summary: Сохранение Tabloы
      description: |
      operationId: TabloSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TabloSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/TabloModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /tablo/getMiscData:
      post:
        tags:
          - widget
        summary: Прочая информация для Tablo
        description: |
        operationId: TabloGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/TabloMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  ############# Speedometer

  /speedometer/getList:
      post:
        tags:
          - widget
        summary: Получение списка Speedometer
        description: |
        operationId: SpeedometerGetList
        parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SpeedometerFilter'
        responses:
          200:
            description: Список Speedometer
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/SpeedometerModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /speedometer/save:
    post:
      tags:
        - widget
      summary: Сохранение Speedometerы
      description: |
      operationId: SpeedometerSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/SpeedometerSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/SpeedometerModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /speedometer/getMiscData:
      post:
        tags:
          - widget
        summary: Прочая информация для Speedometer
        description: |
        operationId: SpeedometerGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/SpeedometerMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []


  ############# HandBook

  /handBook/getList:
      post:
        tags:
          - settings
        summary: Получение списка справочников
        description: |
          Справочники есть двух типов - линия и KPI. Их API одинаковое. Нужно только при сохранении и получения списка передавать тип справочника
        operationId: HandBookGetList
        parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HandBookFilter'
        responses:
          200:
            description: Список HandBook
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/HandBookModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /handBook/save:
    post:
      tags:
        - settings
      summary: Сохранение справочника
      description: |
        Справочники есть двух типов - линия и KPI. Их API одинаковое. Нужно только при сохранении и получения списка передавать тип справочника
      operationId: HandBookSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/HandBookSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/HandBookModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /handBook/getMiscData:
      post:
        tags:
          - settings
        summary: Прочая информация для справочника
        description: |
          Справочники есть двух типов - линия и KPI. Их API одинаковое. Нужно только при сохранении и получения списка передавать тип справочника
        operationId: HandBookGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/HandBookMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []


  ############# ProjectActivityLine

  /projectActivityLine/getList:
      post:
        tags:
          - settings
        summary: Получение списка ProjectActivityLine
        description: |
        operationId: ProjectActivityLineGetList
        responses:
          200:
            description: Список ProjectActivityLine
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/ProjectActivityLineModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /projectActivityLine/save:
    post:
      tags:
        - settings
      summary: Сохранение ProjectActivityLineы
      description: |
      operationId: ProjectActivityLineSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/ProjectActivityLineSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/ProjectActivityLineModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /projectActivityLine/getMiscData:
      post:
        tags:
          - settings
        summary: Прочая информация для ProjectActivityLine
        description: |
        operationId: ProjectActivityLineGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/ProjectActivityLineMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  ############# TargetIndicator

  /targetIndicator/getList:
      post:
        tags:
          - settings
        summary: Получение списка TargetIndicator
        description: |
        operationId: TargetIndicatorGetList
        parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetIndicatorFilter'
        responses:
          200:
            description: Список TargetIndicator
            schema:
              type: object
              properties:
                objects:
                  type: array
                  items:
                    $ref: '#/definitions/TargetIndicatorModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /targetIndicator/save:
    post:
      tags:
        - settings
      summary: Сохранение TargetIndicatorы
      description: |
      operationId: TargetIndicatorSave
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/TargetIndicatorSaveRequest'
      responses:
        200:
          description: Новая модель
          schema:
            $ref: '#/definitions/TargetIndicatorModel'
        default:
          description: Неизвестная ошибка
          schema:
            $ref: '#/definitions/ErrorModel'
      security:
        - AuthAppId: []
        - AuthMethod: []
        - AuthSignature: []
        - AuthTime: []

  /targetIndicator/getMiscData:
      post:
        tags:
          - settings
        summary: Прочая информация для TargetIndicator
        description: |
        operationId: TargetIndicatorGetMiscData
        responses:
          200:
            description: |
            schema:
              $ref: '#/definitions/TargetIndicatorMiscData'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  ############# Roles

  /roles/list:
      post:
        tags:
          - app
        summary: Получения списка ролей
        description: |
        operationId: RolesList
        responses:
          200:
            description: Список ролей
            schema:
              type: array
              items:
                $ref: '#/definitions/RoleModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

  /roles/setPermission:
      post:
        tags:
          - app
        summary: Сохранение разрешения роли
        description: |
        operationId: RolesSetPermission
        parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/RoleSetPermissionRequest'
        responses:
          200:
            description: Обновленная роль
            schema:
              $ref: '#/definitions/RoleModel'
          default:
            description: Неизвестная ошибка
            schema:
              $ref: '#/definitions/ErrorModel'
        security:
          - AuthAppId: []
          - AuthMethod: []
          - AuthSignature: []
          - AuthTime: []

definitions:


 ############ ACCOUNT


  AppPingResponseModel:
    description: Модель ответа проверки работоспособности сервера
    type: object
    properties:
      serverTime:
        type: string
        format: date-time
        description: Текущее время сервера
    required:
      - serverTime

  AccountLoginRequestModel:
    description: Модель запроса авторизации пользователя в приложении
    type: object
    properties:
      login:
        type: string
        description: "Имя пользователя"
      password:
        type: string
        description: "Пароль"
    required:
      - authMethod

  AccountLoginResponseModel:
    description: Модель ответа авторизации пользователя в приложении
    type: object
    properties:
      appId:
        type: string
        description: Уникальный идентификатор экземпляра приложения. Используется в заголовке `X-Auth-AppId`
      appSecret:
        type: string
        description: Секретный ключ экземпляра приложения. Используется для подписи методов API
    required:
      - appId
      - appSecret
      - userName

  AccountCreateRequestModel:
    description: Модель запроса создания аккаунта
    type: object
    properties:
      phone:
        type: string
        description: Номер телефона
      name:
        type: string
        description: Имя
      deviceType:
        type: string
        description: Тип устройства (ios, android)
        enum:
          - android
          - iOs
      deviceId:
        type: string
        description: Идентификатор устройства
      deviceName:
        description: Имя устройства
        type: string
    required:
      - authMethod
      - phone
      - email
      - deviceType
      - deviceName

  AccountCreateResponseModel:
    description: Модель ответа создания аккаунта
    type: object
    properties:
      appId:
        type: string
        description: Уникальный идентификатор экземпляра приложения. Используется в заголовке `X-Auth-AppId`
      appSecret:
        type: string
        description: Секретный ключ экземпляра приложения. Используется для подписи методов API
    required:
      - appId
      - appSecret

  AccountExistsRequestModel:
    description: Модель запроса проверка наличия аккаунта
    type: object
    properties:
      username:
        type: string
        description: Имя пользователя

  AccountExistsResponseModel:
    description: Модель ответа проверки наличия аккаунта
    type: object
    properties:
      exists:
        type: boolean
        description: Признак наличия
    required:
      - exists

  UserModel:
    description: Модель персональных данных пользователей
    type: object
    required:
      - userId
      - username
    properties:
      userId:
        type: integer
        format: int32
        description: Идентификатор пользователя
      username:
        type: string
        description: Имя пользователя

############ FILES


  FileUploadRequest:
    description: Модель присоединения файла
    type: object
    properties:
      fileExt:
        type: string
        description: Расширение файла (docx, pdf, xlsx..) (обязательное)
      originalFileName:
        type: string
        description: Оригинальное имя файла
      file:
        type: string
        format: binary
        description: Изображение, закодированное в формате “multipart/form-data”
    required:
      - fileExt
      - file

  FileModel:
    description: Модель файла
    type: object
    properties:
      fileId:
        type: integer
        format: int64
        description: Идентификатор файла
        minimum: 1
      fileName:
        type: string
        description: Имя файла
      fileUrl:
        type: string
        description: Url для загрузки
        example:
          - test
    required:
      - fileId
      - fileName
      - fileUrl

############ APP

  AppPingRequestModel:
    description: Модель запроса проверки работоспособности сервера
    type: object
    properties:
      lat:
        type: number
        format: double
        description: Географическая широта
      lng:
        type: number
        format: double
        description: Географическая долгота
  ErrorModel:
    description: Модель ошибки
    type: object
    properties:
      message:
        type: string
        description: Сообщение об ошибке

  LanguageModel:
    description: Язык
    type: object
    required:
      - code
    properties:
      code:
        type: string
        enum:
          - ru
          - en

############ MISC

  ProjectModel:
    description: Проект
    type: object
    required:
      - id
      - title
    properties:
      id:
        minimum: 1
        type: integer
      title:
        type: string

  SimpleObjectId:
    type: integer
    description: Идентификатор объекта
    minimum: 1


  WidgetTitle:
    type: string
    description: Заголовок виджета

  IndicatorId:
    type: integer
    description: Идентификатор показателя


  PaginatedRequest:
    description: Запрос с пагинацией
    type: object
    properties:
      count:
        type: integer
      offset:
        type: integer

  KeyValuedInfo:
    description: Пример значений виде ключ и значение
    type: object
    required:
      - key
      - value
    properties:
      key:
        type: string
        description: Ключ
      value:
        type: string
        description: Значение
  ActivityId:
    type: integer
    description: Идентификатор активности


  KpiId:
    type: integer
    description: Идентификатор KPI

############ NEWS


  NewsModelList:
    description: Укороченная модель новости для списка
    type: object
    required:
      - id
      - date
      - title
      - shortContent
      - role
      - category
      - externalLink
      - author
    properties:
      id:
        $ref: '#/definitions/NewsId'
      date:
        type: string
        format: date
        description: YYYY-MM-DD
      title:
        type: string
      shortContent:
        type: string
      role:
        $ref: '#/definitions/NewsRoleModel'
      category:
        $ref: '#/definitions/NewsCategoryModel'
      externalLink:
        type: string
        description: Ссылка
      author:
        $ref: '#/definitions/UserModel'

  NewsModelForm:
    description: Полная модель новости для формы
    type: object
    required:
      - id
      - title
      - shortContent
      - fullContent
      - category
      - file
      - externalLink
      - language
    properties:
      id:
        $ref: '#/definitions/NewsId'
      title:
        type: string
      shortContent:
        type: string
      fullContent:
        type: string
      category:
        $ref: '#/definitions/NewsCategoryModel'
      file:
        $ref: '#/definitions/FileModel'
      externalLink:
        type: string
        description: Ссылка
      language:
        $ref: '#/definitions/LanguageModel'

  NewsSaveRequest:
    description: Содержимое запроса на сохранение
    type: object
    properties:
      id:
        $ref: '#/definitions/NewsId'
      title:
        type: string
      shortContent:
        type: string
      fullContent:
        type: string
      categoryId:
        type: integer
      fileId:
        type: integer
      externalLink:
        type: string
        description: Ссылка
      language:
        type: string
        enum:
        - ru
        - en
    required:
      - id
      - title
      - shortContent
      - fullContent
      - categoryId
      - fileId
      - externalLink
      - language

  NewsId:
    type: integer
    description: Идентификатор новости

  NewsCategoryModel:
    description: Категория новостей
    type: object
    required:
      - id
      - title
      - key
    properties:
      id:
        type: integer
        minimum: 1
      title:
        type: string
      key:
        type: string
        description: Ключ категории
  NewsRoleModel:
      description: Роль новостей
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        key:
          type: string
          description: Ключ роли
      required:
        - id
        - title
        - key


############ MBR

  MbrModel:
    description: Укороченная модель новости для списка
    type: object
    required:
      - id
      - project
      - files
    properties:
      id:
        $ref: '#/definitions/MbrId'
      project:
        $ref: '#/definitions/ProjectModel'
      year:
        type: integer
      files:
        type: array
        items:
          $ref: '#/definitions/FileModel'

  MbrSaveRequest:
      description: Содержимое запроса на сохранение
      type: object
      required:
        - id
        - projectId
        - year
        - fileIds
      properties:
        id:
          $ref: '#/definitions/MbrId'
        projectId:
          type: integer
        year:
          $ref: '#/definitions/YearModel'
        fileIds:
          type: array
          required:
            - type
          items:
            type: integer

  MbrId:
    type: integer
    description: Идентификатор новости

  YearModel:
    type: integer
    minimum: 1
    maximum: 2050


############ Billing

  BillModel:
    description: Укороченная модель новости для списка
    type: object
    required:
      - id
      - project
      - files
    properties:
      id:
        $ref: '#/definitions/BillId'
      project:
        $ref: '#/definitions/ProjectModel'
      year:
        $ref: '#/definitions/YearModel'
      files:
        type: array
        items:
          $ref: '#/definitions/FileModel'

  BillSaveRequest:
    description: Содержимое запроса на сохранение
    type: object
    required:
      - id
      - projectId
      - year
      - fileIds
    properties:
      id:
        $ref: '#/definitions/BillId'
      projectId:
        type: integer
      year:
        $ref: '#/definitions/YearModel'
      fileIds:
        type: array
        items:
          type: integer

  BillId:
    type: integer
    description: Идентификатор новости

  BillListRequest:
    description: запрос за списком счетов
    allOf:
    - $ref: '#/definitions/PaginatedRequest'
    - type: object
      properties:
        role:
          type: integer
        year:
          type: integer

############ WidgetHistogram

  WidgetHistogramModel:
    description: Модель гистограммы
    type: object
    required:
      - id
      - type
      - activityId
      - parameterId
    properties:
      id:
        $ref: '#/definitions/WidgetHistogramId'
      title:
        type: string
        description: Заголовок виджета
      activityId:
        $ref: '#/definitions/ActivityId'
      parameterId:
        type: integer
        description: Идентификатор параметра

  WidgetHistogramSaveRequest:
    allOf:
    - $ref: '#/definitions/WidgetHistogramModel'
    - description: Сохранение гистограммы

  WidgetHistogramId:
    type: integer
    description: Идентификатор объекта


############ Abbreviation

  AbbreviationModel:
    description: Модель аббревиатуры
    type: object
    required:
      - id
      - parameter
      - title
    properties:
      id:
        $ref: '#/definitions/AbbreviationId'
      parameter:
        type: string
        description: Параметр
      title:
        type: object
        description: Названия
        required:
          - ru
          - en
        properties:
          ru:
            type: string
          en:
            type: string


  AbbreviationSaveRequest:
    allOf:
    - $ref: '#/definitions/AbbreviationModel'
    - description: Сохранение аббревиатуры

  AbbreviationId:
    type: integer
    description: Идентификатор объекта

  ############ RoundedDiagram

  RoundedDiagramModel:
    description: Модель rounded-diagramы
    type: object
    required:
      - id
      - title
      - kpiId
      - tabloId
      - indicatorId
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      title:
        $ref: '#/definitions/WidgetTitle'
      kpiId:
        type: integer
        description: Идентификатор KPI
      tabloId:
        type: integer
        description: Идентификатор табло
      indicatorIds:
        type: array
        description: Массив выбранных показателей в нужном порядке
        items:
          $ref: '#/definitions/IndicatorId'


  RoundedDiagramSaveRequest:
    allOf:
    - $ref: '#/definitions/RoundedDiagramModel'
    - description: Сохранение rounded-diagramы

  ############ Table

  TableModel:
    description: Модель Tableы
    type: object
    required:
      - id
      - title
      - activityId
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      title:
        $ref: '#/definitions/WidgetTitle'
      activityId:
        $ref: '#/definitions/ActivityId'

  TableSaveRequest:
    allOf:
    - $ref: '#/definitions/TableModel'
    - description: Сохранение Tableы

  TableMiscData:
    type: object
    description: Прочая информация для Table
    required:
      - activities
      - tableSizes
      - indicators
      - targetIndicators
    properties:
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      tableSizes:
        $ref: '#/definitions/KeyValuedInfo'
      indicators:
        $ref: '#/definitions/KeyValuedInfo'
      targetIndicators:
        $ref: '#/definitions/KeyValuedInfo'


  ############ Tablo

  TabloModel:
    description: Модель Tabloы
    type: object
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      title:
        $ref: '#/definitions/WidgetTitle'
      activityId:
        $ref: '#/definitions/ActivityId'
      tabloType:
        type: integer
        enum:
          - 1
          - 2
    required:
      - id
      - title
      - activityId
      - tabloType

  TabloSaveRequest:
    allOf:
    - $ref: '#/definitions/TabloModel'
    - description: Сохранение Tabloы

  TabloMiscData:
    type: object
    description: Прочая информация для Tablo
    required:
      - activities
      - indicators
    properties:
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      indicators:
        $ref: '#/definitions/KeyValuedInfo'

  ############ Speedometer

  SpeedometerModel:
    description: Модель Speedometer
    type: object
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      title:
        $ref: '#/definitions/WidgetTitle'
      activityId:
        $ref: '#/definitions/ActivityId'
      kpiId:
        $ref: '#/definitions/KpiId'
      targetKpiId:
        $ref: '#/definitions/KpiId'
      SpeedometerType:
        type: string
        enum:
          - small
          - large
    required:
      - id
      - title
      - activityId
      - kpiId
      - targetKpiId
      - SpeedometerType

  SpeedometerSaveRequest:
    allOf:
    - $ref: '#/definitions/SpeedometerModel'
    - description: Сохранение Speedometer

  SpeedometerMiscData:
    type: object
    description: Прочая информация для Speedometer
    required:
      - activities
      - indicators
      - kpis
      - targetKpis
    properties:
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      indicators:
        $ref: '#/definitions/KeyValuedInfo'
      kpis:
        $ref: '#/definitions/KeyValuedInfo'
      targetKpis:
        $ref: '#/definitions/KeyValuedInfo'

  SpeedometerFilter:
    type: object
    properties:
      speedometerType:
        $ref: '#/definitions/SpeedometerType'
  SpeedometerType:
    type: string
    enum:
      - small
      - large


  ############ HandBook

  HandBookModel:
    description: Модель HandBook
    type: object
    required:
      - id
      - key
      - value
      - handBookType
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      key:
        $ref: '#/definitions/WidgetTitle'
      value:
        $ref: '#/definitions/ActivityId'
      handBookType:
        $ref: '#/definitions/HandBookType'

  HandBookSaveRequest:
    allOf:
    - $ref: '#/definitions/HandBookModel'
    - description: Сохранение HandBook

  HandBookMiscData:
    type: object
    description: Прочая информация для HandBook
    required:
      - activities
      - indicators
      - kpis
      - targetKpis
    properties:
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      indicators:
        $ref: '#/definitions/KeyValuedInfo'
      kpis:
        $ref: '#/definitions/KeyValuedInfo'
      targetKpis:
        $ref: '#/definitions/KeyValuedInfo'

  HandBookFilter:
    type: object
    required:
      - handBookType
    properties:
      handbookType:
        $ref: '#/definitions/HandBookType'

  HandBookType:
    type: string
    enum:
      - kpi
      - line


  ############ ProjectActivityLine

  ProjectActivityLineModel:
    description: Модель ProjectActivityLine
    type: object
    required:
      - id
      - projectId
      - activityId
      - lineIds
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      projectId:
        $ref: '#/definitions/SimpleObjectId'
      activityId:
        $ref: '#/definitions/SimpleObjectId'
      lineIds:
        type: array
        items:
          type: integer
          description: Идентификатор линии


  ProjectActivityLineSaveRequest:
    allOf:
    - $ref: '#/definitions/ProjectActivityLineModel'
    - description: Сохранение ProjectActivityLine

  ProjectActivityLineMiscData:
    type: object
    description: Прочая информация для ProjectActivityLine
    required:
      - activities
      - projects
      - lines
    properties:
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      projects:
        $ref: '#/definitions/KeyValuedInfo'
      lines:
        $ref: '#/definitions/KeyValuedInfo'

  ProjectActivityLineFilter:
    type: object


  ############ TargetIndicator

  TargetIndicatorModel:
    description: Модель TargetIndicator
    type: object
    required:
      - id
      - projectId
      - activityId
      - lineId
      - parameters
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      projectId:
        $ref: '#/definitions/SimpleObjectId'
      activityId:
        $ref: '#/definitions/SimpleObjectId'
      lineId:
        $ref: '#/definitions/SimpleObjectId'
      parameters:
        $ref: '#/definitions/TargetIndicatorParameter'

  TargetIndicatorSaveRequest:
    allOf:
    - $ref: '#/definitions/TargetIndicatorModel'
    - description: Сохранение TargetIndicator

  TargetIndicatorMiscData:
    type: object
    description: Прочая информация для TargetIndicator
    required:
      - projects
      - activities
      - lines
      - parameters
    properties:
      projects:
        $ref: '#/definitions/KeyValuedInfo'
      activities:
        $ref: '#/definitions/KeyValuedInfo'
      lines:
        $ref: '#/definitions/KeyValuedInfo'
      parameters:
        $ref: '#/definitions/KeyValuedInfo'

  TargetIndicatorFilter:
    type: object

  TargetIndicatorParameter:
    type: object
    description: Параметры целевых показателей
    required:
      - parameterId
      - parameterValue
    properties:
      parameterId:
        $ref: '#/definitions/SimpleObjectId'
      parameterValue:
        type: number
        description: Целевое значение


  ############ Roles

  RoleModel:
    type: object
    description: Роль
    required:
      - id
      - title
      - permissions
    properties:
      id:
        $ref: '#/definitions/SimpleObjectId'
      title:
        type: string
      permissions:
        type: array
        items:
          type: object
          properties:
            permission:
              $ref: '#/definitions/PermissionInformationModel'
            allow:
              type: boolean


  PermissionInformationModel:
    type: object
    description: Информация о разрешении
    required:
      - title
      - key
    properties:
      title:
        type: string
      key:
        type: string
        description: Ключ разрешения для удобства использования
  RoleSetPermissionRequest:
    type: object
    required:
      - roleId
      - permissionKey
      - allow
    properties:
      roleId:
        type: string
        description: Идентификатор роли
      permissionKey:
        type: string
        description: Ключ разрешения
      allow:
        type: boolean
        description: Наличие доступа


securityDefinitions:
  AuthAppId:
    type: apiKey
    in: header
    name: X-Auth-AppId
  AuthMethod:
    type: apiKey
    in: header
    name: X-Auth-Method
  AuthSignature:
    type: apiKey
    in: header
    name: X-Auth-Signature
  AuthTime:
    type: apiKey
    in: header
    name: X-Auth-Time

tags:
  - name: app
    description: Управление приложением
  - name: news
    description: Управление новостями
  - name: mbr
    description: Работа с MBR
  - name: widget
    description: Работа с виджетами
  - name: account
    description: Работа с аккаунтом
  - name: bill
    description: Работа со счетами
  - name: documents
    description: Работа с файлами
  - name: misc
    description: Прочая информация
  - name: settings
    description: Прочие настройки